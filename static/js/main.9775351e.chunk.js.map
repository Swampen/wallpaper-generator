{"version":3,"sources":["Classes/Ridge.ts","Components/Generator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Ridge","Fill","RidgeYStart","Smoodness","Amplitude","NoiceStart","RidgeXStart","this","p5","beginShape","noStroke","fill","vertex","windowHeight","noiseDetail","noiceOffset","y","noise","x","windowWidth","endShape","CLOSE","Generator","canvas","Settings","Seed","NumberOfRidges","SpaceBetweenRidges","BackRidgeColor","FrontRidgeColor","EnableMoon","MoonXPosition","MoonYPosition","MoonSize","setup","canvasParentRef","createCanvas","parent","id","date","Date","getTime","random","settingsTab","Pane","addTab","pages","title","addInput","on","redraw","mountainFolder","addFolder","expanded","min","max","step","numberOfRidgesInput","label","spaceBetweenRidgesInput","backRidgeColorInput","frontRidgeColorInput","enableMoonInput","moonFolder","e","hidden","value","moonXPositionInput","moonYPositionInput","moonSizeInput","noLoop","document","getElementById","draw","noiseSeed","startColor","color","endColor","colorDelta","lerpStart","background","drawingContext","getContext","shadowBlur","shadowColor","ellipse","i","lerpColor","height","DrawRidge","windowResized","resizeCanvas","App","className","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sRAEaA,EAAb,WAQI,WAAYC,EAAqBC,EAAqBC,EAAmBC,EAAmBC,GAAqB,yBAPjHJ,UAOgH,OANhHK,iBAMgH,OALhHJ,iBAKgH,OAJhHC,eAIgH,OAHhHC,eAGgH,OAFhHC,gBAEgH,EAC5GE,KAAKN,KAAOA,EACZM,KAAKD,YAAc,EACnBC,KAAKL,YAAcA,EACnBK,KAAKJ,UAAYA,EACjBI,KAAKH,UAAYA,EACjBG,KAAKF,WAAaA,EAd1B,6CAiBI,SAAUG,GACNA,EAAGC,aACHD,EAAGE,WACHF,EAAGG,KAAKJ,KAAKN,MACbO,EAAGI,OAAO,EAAGJ,EAAGK,cAChBL,EAAGM,YAAYP,KAAKJ,UAAW,IAC/B,IAAIY,EAAcR,KAAKF,WACnBW,EAAIT,KAAKL,YAAcM,EAAGS,MAAMF,GAAeR,KAAKH,UACxDI,EAAGI,OAAO,EAAGI,GACb,IAAK,IAAIE,EAAI,EAAGA,GAAKV,EAAGW,YAAaD,GAAK,EACtCV,EAAGI,OAAOM,EAAGF,GACbD,GAAe,IACfC,EAAIT,KAAKL,YAAcM,EAAGS,MAAMF,GAAeR,KAAKH,UAExDI,EAAGI,OAAOJ,EAAGW,YAAaH,GAC1BR,EAAGI,OAAOJ,EAAGW,YAAaX,EAAGK,cAC7BL,EAAGY,SAASZ,EAAGa,WAjCvB,K,eC6IeC,EAxIa,WAC3B,IAaIC,EAbAC,EAAW,CACdC,KAAM,EACNrB,UAAW,IACXD,UAAW,EACXuB,eAAgB,EAChBC,mBAAoB,IACpBC,eAAgB,UAChBC,gBAAiB,UACjBC,YAAY,EACZC,cAAe,EACfC,cAAe,EACfC,SAAU,KAuHX,OACC,cAAC,IAAD,CAAQC,MApHK,SAAC1B,EAAa2B,GAC3B3B,EAAG4B,aAAa5B,EAAGW,YAAaX,EAAGK,cAAcwB,OAAOF,GAAiBG,GAAG,UAC5E,IAAIC,EAAO,IAAIC,KACfhB,EAASC,KAAOc,EAAKE,UACrBjB,EAASO,cAAgBvB,EAAGW,YAAc,GAAKX,EAAGkC,OAAO,EAAG,GAC5DlB,EAASQ,cAAgBxB,EAAGK,aAAeW,EAASG,mBAAqBH,EAASE,eAAiBlB,EAAGS,MAAM,GAAKO,EAASpB,UAAY,IACtI,IAOIuC,GAPS,IAAIC,QACCC,OAAO,CACxBC,MAAO,CACN,CAAEC,MAAO,YACT,CAAEA,MAAO,aAGYD,MAAM,GAE7BH,EAAYK,SAASxB,EAAU,QAAQyB,GAAG,UAAU,kBAAMzC,EAAG0C,YAE7D,IAAIC,EAAiBR,EAAYS,UAAU,CAAEL,MAAO,WAAYM,UAAU,IAE1EF,EAAeH,SAASxB,EAAU,YAAa,CAAE8B,IAAK,EAAGC,IAAK,IAAKC,KAAM,IAAKP,GAAG,UAAU,kBAAMzC,EAAG0C,YAEpGC,EAAeH,SAASxB,EAAU,YAAa,CAAE8B,IAAK,EAAGC,IAAK,GAAIC,KAAM,IAAKP,GAAG,UAAU,kBAAMzC,EAAG0C,YAEnG,IAAIO,EAAsBN,EAAeH,SACxCxB,EAAU,iBACV,CAAE8B,IAAK,EAAGC,IAAK,GAAIC,KAAM,IAE1BC,EAAoBC,MAAQ,WAC5BD,EAAoBR,GAAG,UAAU,kBAAMzC,EAAG0C,YAE1C,IAAIS,EAA0BR,EAAeH,SAC5CxB,EAAU,qBACV,CAAE8B,IAAK,GAAIC,IAAK,IAAKC,KAAM,IAE5BG,EAAwBD,MAAQ,QAChCC,EAAwBV,GAAG,UAAU,kBAAMzC,EAAG0C,YAE9C,IAAIU,EAAsBT,EAAeH,SACxCxB,EAAU,kBAEXoC,EAAoBF,MAAQ,aAC5BE,EAAoBX,GAAG,UAAU,kBAAMzC,EAAG0C,YAE1C,IAAIW,EAAuBV,EAAeH,SACzCxB,EAAU,mBAEXqC,EAAqBH,MAAQ,cAC7BG,EAAqBZ,GAAG,UAAU,kBAAMzC,EAAG0C,YAE3C,IAAIY,EAAkBnB,EAAYK,SAASxB,EAAU,cACrDsC,EAAgBJ,MAAQ,OAExB,IAAIK,EAAapB,EAAYS,UAAU,CAAEL,MAAO,OAAQM,UAAU,IAClES,EAAgBb,GAAG,UAAU,SAACe,GAC7BD,EAAWE,QAAUD,EAAEE,MACvB1D,EAAG0C,YAGJ,IAAIiB,EAAqBJ,EAAWf,SACnCxB,EAAU,gBACV,CAAE8B,IAAK,EAAGC,IAAK/C,EAAGW,YAAaqC,KAAM,IAEtCW,EAAmBT,MAAQ,QAC3BS,EAAmBlB,GAAG,UAAU,kBAAMzC,EAAG0C,YAEzC,IAAIkB,EAAqBL,EAAWf,SACnCxB,EAAU,gBACV,CAAE8B,IAAK,EAAGC,IAAK/C,EAAGK,aAAc2C,KAAM,IAEvCY,EAAmBV,MAAQ,QAC3BU,EAAmBnB,GAAG,UAAU,kBAAMzC,EAAG0C,YAEzC,IAAImB,EAAgBN,EAAWf,SAC9BxB,EAAU,WACV,CAAE8B,IAAK,EAAGC,IAAK,IAAMC,KAAM,IAE5Ba,EAAcX,MAAQ,OACtBW,EAAcpB,GAAG,UAAU,kBAAMzC,EAAG0C,YAEpC1C,EAAG8D,SACH/C,EAASgD,SAASC,eAAe,WAoCXC,KAhCV,SAACjE,GACbA,EAAGkE,UAAUlD,EAASC,MACtB,IAAIkD,EAAanE,EAAGoE,MAAMpD,EAASI,gBAC/BiD,EAAWrE,EAAGoE,MAAMpD,EAASK,iBAC7BiD,EAAa,EAAItD,EAASE,eAC1BqD,EAAY,EAIhB,GAFAvE,EAAGwE,WAAW,IAEVxD,EAASM,WAAY,CACxBtB,EAAGG,KAAK,KACR,IAAIsE,EAAiB1D,EAAO2D,WAAW,MACvCD,EAAeE,WAAa,GAC5BF,EAAeG,YAAc,QAC7B5E,EAAGE,WACHF,EAAG6E,QAAQ7D,EAASO,cAAeP,EAASQ,cAAeR,EAASS,UACpEgD,EAAeE,WAAa,EAE7B,IAAK,IAAIG,EAAI9D,EAASE,eAAgB4D,GAAK,EAAGA,IAAK,CAClD,IAAIV,EAAQpE,EAAG+E,UAAUZ,EAAYE,EAAUE,GAC3C/D,EAAIR,EAAGgF,OAAShE,EAASG,mBAAqB2D,EAAI,GAAM9D,EAASpB,UACzD,IAAIJ,EAAM4E,EAAO5D,EAAGQ,EAASrB,UAAWqB,EAASpB,UAAWoB,EAASC,KAAO6D,GAClFG,UAAUjF,GAChBuE,GAAaD,IASoBY,cALb,SAAClF,GACtBA,EAAGmF,aAAanF,EAAGW,YAAaX,EAAGK,kBCnIhB+E,E,4JAEnB,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,U,GALyBC,IAAMC,WCUxBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1BwB,M","file":"static/js/main.9775351e.chunk.js","sourcesContent":["import p5Types from \"p5\";\n\nexport class Ridge{\n    Fill: p5Types.Color;\n    RidgeXStart: number;\n    RidgeYStart: number;\n    Smoodness: number;\n    Amplitude: number;\n    NoiceStart: number;\n    \n    constructor(Fill: p5Types.Color, RidgeYStart: number, Smoodness: number, Amplitude: number, NoiceStart: number) {\n        this.Fill = Fill;\n        this.RidgeXStart = 0;\n        this.RidgeYStart = RidgeYStart;\n        this.Smoodness = Smoodness;\n        this.Amplitude = Amplitude;\n        this.NoiceStart = NoiceStart;\n    }\n\n    DrawRidge(p5: p5Types) {\n        p5.beginShape();\n        p5.noStroke();\n        p5.fill(this.Fill);\n        p5.vertex(0, p5.windowHeight);\n        p5.noiseDetail(this.Smoodness, 0.7)\n        let noiceOffset = this.NoiceStart;\n        let y = this.RidgeYStart - p5.noise(noiceOffset) * this.Amplitude;\n        p5.vertex(0, y)\n        for (let x = 0; x <= p5.windowWidth; x += 4) {\n            p5.vertex(x, y);\n            noiceOffset += 0.03;\n            y = this.RidgeYStart - p5.noise(noiceOffset) * this.Amplitude ;\n        }\n        p5.vertex(p5.windowWidth, y);\n        p5.vertex(p5.windowWidth, p5.windowHeight);\n        p5.endShape(p5.CLOSE);\n    }\n}","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport { Ridge } from \"../Classes/Ridge\";\nimport { Pane } from 'tweakpane';\n\n\nconst Generator: React.FC = () => {\n\tlet Settings = {\n\t\tSeed: 0,\n\t\tAmplitude: 100,\n\t\tSmoodness: 4,\n\t\tNumberOfRidges: 4,\n\t\tSpaceBetweenRidges: 100,\n\t\tBackRidgeColor: \"#6a6a6e\",\n\t\tFrontRidgeColor: \"#000064\",\n\t\tEnableMoon: true,\n\t\tMoonXPosition: 0,\n\t\tMoonYPosition: 0,\n\t\tMoonSize: 300\n\t}\n\tlet canvas: HTMLCanvasElement;\n\n\tconst setup = (p5: p5Types, canvasParentRef: Element) => {\n\t\tp5.createCanvas(p5.windowWidth, p5.windowHeight).parent(canvasParentRef).id(\"canvas\");\n\t\tlet date = new Date();\n\t\tSettings.Seed = date.getTime();\n\t\tSettings.MoonXPosition = p5.windowWidth / 10 * p5.random(2, 8);\n\t\tSettings.MoonYPosition = p5.windowHeight - Settings.SpaceBetweenRidges * Settings.NumberOfRidges - p5.noise(0) * Settings.Amplitude * 1.5;\n\t\tconst pane = new Pane();\n\t\tconst tabs = pane.addTab({\n\t\t\tpages: [\n\t\t\t\t{ title: \"Settings\" },\n\t\t\t\t{ title: \"Export\" } //todo\n\t\t\t]\n\t\t});\n\t\tlet settingsTab = tabs.pages[0];\n\t\t// Seed\n\t\tsettingsTab.addInput(Settings, \"Seed\").on(\"change\", () => p5.redraw());\n\t\t// Montain settings\n\t\tlet mountainFolder = settingsTab.addFolder({ title: \"Mountain\", expanded: true });\n\t\t// Montain settings - Amplitude\n\t\tmountainFolder.addInput(Settings, \"Amplitude\", { min: 0, max: 300, step: 5 }).on(\"change\", () => p5.redraw());\n\t\t// Montain settings - Smoodness\n\t\tmountainFolder.addInput(Settings, \"Smoodness\", { min: 1, max: 12, step: 1 }).on(\"change\", () => p5.redraw());\n\t\t// Montain settings - NumberOfRidges\n\t\tlet numberOfRidgesInput = mountainFolder.addInput(\n\t\t\tSettings, \"NumberOfRidges\",\n\t\t\t{ min: 1, max: 10, step: 1 }\n\t\t);\n\t\tnumberOfRidgesInput.label = \"Quantity\";\n\t\tnumberOfRidgesInput.on(\"change\", () => p5.redraw());\n\t\t// Montain settings - Space\n\t\tlet spaceBetweenRidgesInput = mountainFolder.addInput(\n\t\t\tSettings, \"SpaceBetweenRidges\",\n\t\t\t{ min: 50, max: 200, step: 5 }\n\t\t);\n\t\tspaceBetweenRidgesInput.label = \"Space\";\n\t\tspaceBetweenRidgesInput.on(\"change\", () => p5.redraw());\n\t\t// Montain settings - BackRidgeColor\n\t\tlet backRidgeColorInput = mountainFolder.addInput(\n\t\t\tSettings, \"BackRidgeColor\"\n\t\t);\n\t\tbackRidgeColorInput.label = \"Back Color\";\n\t\tbackRidgeColorInput.on(\"change\", () => p5.redraw());\n\t\t// Montain settings - BackRidgeColor\n\t\tlet frontRidgeColorInput = mountainFolder.addInput(\n\t\t\tSettings, \"FrontRidgeColor\"\n\t\t);\n\t\tfrontRidgeColorInput.label = \"Front Color\";\n\t\tfrontRidgeColorInput.on(\"change\", () => p5.redraw());\n\t\t// Moon toggle\n\t\tlet enableMoonInput = settingsTab.addInput(Settings, \"EnableMoon\");\n\t\tenableMoonInput.label = \"Moon\"\n\t\t// Moon settings\n\t\tlet moonFolder = settingsTab.addFolder({ title: \"Moon\", expanded: true });\n\t\tenableMoonInput.on(\"change\", (e) => {\n\t\t\tmoonFolder.hidden = !e.value;\n\t\t\tp5.redraw();\n\t\t});\n\t\t// Moon settings - MoonXPosition\n\t\tlet moonXPositionInput = moonFolder.addInput(\n\t\t\tSettings, \"MoonXPosition\",\n\t\t\t{ min: 0, max: p5.windowWidth, step: 5 }\n\t\t);\n\t\tmoonXPositionInput.label = \"X Pos\";\n\t\tmoonXPositionInput.on(\"change\", () => p5.redraw());\n\t\t// Moon settings - MoonXPosition\n\t\tlet moonYPositionInput = moonFolder.addInput(\n\t\t\tSettings, \"MoonYPosition\",\n\t\t\t{ min: 0, max: p5.windowHeight, step: 5 }\n\t\t);\n\t\tmoonYPositionInput.label = \"Y Pos\";\n\t\tmoonYPositionInput.on(\"change\", () => p5.redraw());\n\t\t// Moon settings - MoonXPosition\n\t\tlet moonSizeInput = moonFolder.addInput(\n\t\t\tSettings, \"MoonSize\",\n\t\t\t{ min: 0, max: 1000, step: 5 }\n\t\t);\n\t\tmoonSizeInput.label = \"Size\";\n\t\tmoonSizeInput.on(\"change\", () => p5.redraw());\n\n\t\tp5.noLoop();\n\t\tcanvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n\t};\n\n\n\tconst draw = (p5: p5Types) => {\n\t\tp5.noiseSeed(Settings.Seed)\n\t\tlet startColor = p5.color(Settings.BackRidgeColor);\n\t\tlet endColor = p5.color(Settings.FrontRidgeColor);\n\t\tlet colorDelta = 1 / Settings.NumberOfRidges;\n\t\tlet lerpStart = 0;\n\n\t\tp5.background(51);\n\n\t\tif (Settings.EnableMoon) {\n\t\t\tp5.fill(230);\n\t\t\tlet drawingContext = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\t\t\tdrawingContext.shadowBlur = 50;\n\t\t\tdrawingContext.shadowColor = 'white';\n\t\t\tp5.noStroke()\n\t\t\tp5.ellipse(Settings.MoonXPosition, Settings.MoonYPosition, Settings.MoonSize)\n\t\t\tdrawingContext.shadowBlur = 0;\n\t\t}\n\t\tfor (let i = Settings.NumberOfRidges; i >= 1; i--) {\n\t\t\tlet color = p5.lerpColor(startColor, endColor, lerpStart)\n\t\t\tlet y = p5.height - Settings.SpaceBetweenRidges * i - 0.3 * Settings.Amplitude;\n\t\t\tlet ridge = new Ridge(color, y, Settings.Smoodness, Settings.Amplitude, Settings.Seed * i);\n\t\t\tridge.DrawRidge(p5)\n\t\t\tlerpStart += colorDelta\n\t\t}\n\t};\n\n\tconst windowResized = (p5: p5Types) => {\n\t\tp5.resizeCanvas(p5.windowWidth, p5.windowHeight)\n\t}\n\n\treturn (\n\t\t<Sketch setup={setup} draw={draw} windowResized={windowResized} />\n\t);\n};\n\nexport default Generator;","import React from 'react';\nimport './App.css';\nimport Generator from \"./Components/Generator\"\n\nexport default class App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Generator/>\n      </div>\n    );\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}