{"version":3,"sources":["Classes/Ridge.ts","Components/Generator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Ridge","Fill","RidgeYStart","Smoodness","Amplitude","NoiceStart","RidgeXStart","this","p5","beginShape","noStroke","fill","vertex","windowHeight","noiseDetail","noiceOffset","y","noise","x","windowWidth","endShape","CLOSE","Generator","canvas","Settings","Seed","NumberOfRidges","SpaceBetweenRidges","BackRidgeColor","FrontRidgeColor","MoonXPosition","MoonYPosition","MoonSize","setup","canvasParentRef","createCanvas","parent","id","random","gui","dat","useLocalStorage","add","onChange","redraw","mountainsSettings","addFolder","open","name","addColor","moonSettings","noLoop","document","getElementById","draw","noiseSeed","startColor","color","endColor","colorDelta","lerpStart","background","drawingContext","getContext","shadowBlur","shadowColor","ellipse","i","lerpColor","height","DrawRidge","windowResized","resizeCanvas","App","className","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6939c258.chunk.js","sourcesContent":["import p5Types from \"p5\";\n\nexport class Ridge{\n    Fill: p5Types.Color;\n    RidgeXStart: number;\n    RidgeYStart: number;\n    Smoodness: number;\n    Amplitude: number;\n    NoiceStart: number;\n    \n    constructor(Fill: p5Types.Color, RidgeYStart: number, Smoodness: number, Amplitude: number, NoiceStart: number) {\n        this.Fill = Fill;\n        this.RidgeXStart = 0;\n        this.RidgeYStart = RidgeYStart;\n        this.Smoodness = Smoodness;\n        this.Amplitude = Amplitude;\n        this.NoiceStart = NoiceStart;\n    }\n\n    DrawRidge(p5: p5Types) {\n        p5.beginShape();\n        p5.noStroke();\n        p5.fill(this.Fill);\n        p5.vertex(0, p5.windowHeight);\n        p5.noiseDetail(this.Smoodness, 0.7)\n        let noiceOffset = this.NoiceStart;\n        let y = this.RidgeYStart - p5.noise(noiceOffset) * this.Amplitude;\n        p5.vertex(0, y)\n        for (let x = 0; x <= p5.windowWidth; x += 4) {\n            p5.vertex(x, y);\n            noiceOffset += 0.03;\n            y = this.RidgeYStart - p5.noise(noiceOffset) * this.Amplitude ;\n        }\n        p5.vertex(p5.windowWidth, y);\n        p5.vertex(p5.windowWidth, p5.windowHeight);\n        p5.endShape(p5.CLOSE);\n    }\n}","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport { Ridge } from \"../Classes/Ridge\";\nimport * as dat from \"dat.gui\"\n\nconst Generator: React.FC = () => {\n\tlet Settings = {\n\t\tSeed: 0,\n\t\tAmplitude: 100,\n\t\tSmoodness: 4,\n\t\tNumberOfRidges: 4,\n\t\tSpaceBetweenRidges: 100,\n\t\tBackRidgeColor: \"#6a6a6e\",\n\t\tFrontRidgeColor: \"#000064\",\n\t\tMoonXPosition: 0,\n\t\tMoonYPosition: 0,\n\t\tMoonSize: 300\n\t}\n\tlet canvas: HTMLCanvasElement;\n\n\tconst setup = (p5: p5Types, canvasParentRef: Element) => {\n\t\tp5.createCanvas(p5.windowWidth, p5.windowHeight).parent(canvasParentRef).id(\"canvas\");\n\t\tSettings.Seed = p5.random(-99999, 99999)\n\t\tSettings.MoonXPosition = p5.windowWidth / 10 * p5.random(2, 8)\n\t\tSettings.MoonYPosition = p5.windowHeight - Settings.SpaceBetweenRidges * Settings.NumberOfRidges - p5.noise(0) * Settings.Amplitude * 1.5;\n\t\tlet gui = new dat.GUI();\n\t\tgui.useLocalStorage = true;\n\t\tgui.add(Settings, \"Seed\", -99999, 99999, 5).onChange(() => p5.redraw());\n\t\tlet mountainsSettings = gui.addFolder(\"Mountains\");\n\t\tmountainsSettings.open();\n\t\tmountainsSettings.add(Settings, \"Amplitude\", 0, 300, 5).onChange(() => p5.redraw());\n\t\tmountainsSettings.add(Settings, \"Smoodness\", 1, 12, 1).onChange(() => p5.redraw());\n\t\tmountainsSettings\n\t\t\t.add(Settings, \"NumberOfRidges\", 1, 10, 1)\n\t\t\t.name(\"Number of Ridges\")\n\t\t\t.onChange(() => p5.redraw());\n\t\tmountainsSettings\n\t\t\t.add(Settings, \"SpaceBetweenRidges\", 50, 200, 5)\n\t\t\t.name(\"Space\")\n\t\t\t.onChange(() => p5.redraw());\n\t\tmountainsSettings.addColor(Settings, \"BackRidgeColor\")\n\t\t\t.name(\"Back Color\")\n\t\t\t.onChange(() => p5.redraw());\n\t\tmountainsSettings.addColor(Settings, \"FrontRidgeColor\")\n\t\t\t.name(\"Front Color\")\n\t\t\t.onChange(() => p5.redraw());\n\t\tlet moonSettings = gui.addFolder(\"Moon\");\n\t\tmoonSettings.open();\n\t\tmoonSettings\n\t\t\t.add(Settings, \"MoonXPosition\", 0, p5.windowWidth, 1)\n\t\t\t.name(\"X Pos\")\n\t\t\t.onChange(() => p5.redraw());\n\t\tmoonSettings\n\t\t\t.add(Settings, \"MoonYPosition\", 0, p5.windowHeight, 1)\n\t\t\t.name(\"Y Pos\")\n\t\t\t.onChange(() => p5.redraw());\n\t\tmoonSettings\n\t\t\t.add(Settings, \"MoonSize\", 0, 1000, 1)\n\t\t\t.name(\"Size\")\n\t\t\t.onChange(() => p5.redraw());\n\n\t\tp5.noLoop()\n\n\t\tcanvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n\t};\n\n\n\tconst draw = (p5: p5Types) => {\n\t\tp5.noiseSeed(Settings.Seed)\n\t\tlet startColor = p5.color(Settings.BackRidgeColor);\n\t\tlet endColor = p5.color(Settings.FrontRidgeColor);\n\t\tlet colorDelta = 1 / Settings.NumberOfRidges;\n\t\tlet lerpStart = 0;\n\n\t\tp5.background(51);\n\t\tp5.fill(230);\n\t\tlet drawingContext = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\t\tdrawingContext.shadowBlur = 50;\n\t\tdrawingContext.shadowColor = 'white';\n\t\tp5.noStroke()\n\t\tp5.ellipse(Settings.MoonXPosition, Settings.MoonYPosition, Settings.MoonSize)\n\t\tdrawingContext.shadowBlur = 0;\n\t\tfor (let i = Settings.NumberOfRidges; i >= 1; i--) {\n\t\t\tlet color = p5.lerpColor(startColor, endColor, lerpStart)\n\t\t\tlet y = p5.height - Settings.SpaceBetweenRidges * i - 0.3 * Settings.Amplitude;\n\t\t\tlet ridge = new Ridge(color, y, Settings.Smoodness, Settings.Amplitude, Settings.Seed * i);\n\t\t\tridge.DrawRidge(p5)\n\t\t\tlerpStart += colorDelta\n\t\t}\n\t};\n\n\tconst windowResized = (p5: p5Types) => {\n\t\tp5.resizeCanvas(p5.windowWidth, p5.windowHeight)\n\t}\n\n\treturn (\n\t\t<Sketch setup={setup} draw={draw} windowResized={windowResized} />\n\t);\n};\n\nexport default Generator;","import React from 'react';\nimport './App.css';\nimport Generator from \"./Components/Generator\"\n\nexport default class App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Generator/>\n      </div>\n    );\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}